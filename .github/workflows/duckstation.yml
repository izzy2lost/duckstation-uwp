name: DuckStation UWP Builder

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag Name'
        required: true
        default: 'v1.0.0'
      package_name:
        description: 'Package Name'
        required: true
        default: 'DuckStation-UWP'

jobs:
  build:
    runs-on: windows-2022

    env:
      SolutionPath: duckstation.sln
      Platform: x64
      Configuration: ReleaseUWP
      BuildMode: SideLoadOnly
      AppxBundle: Never
      ProjectPath: src/duckstation-uwp
      ProjectDirectory: src/duckstation-uwp
      PackageOutputRootDir: C:\AppPackage
      PackageOutputDir: DuckStation
      SDL2_INCLUDE_DIR: ${{ github.workspace }}\dep\msvc\SDL2
      SDL2_LIB_DIR: ${{ github.workspace }}\dep\msvc\SDL2\lib

    steps:
      - name: Install wget and 7zip
        run: |
          choco install wget -y
          choco install 7zip -y
        shell: pwsh

      - name: Install gdown
        run: pip install gdown

      - name: Download and Extract Repository
        run: |
          gdown https://drive.google.com/file/d/1XgYr7dQPSVjjA-agObnpwO2XI13qZgxh -O repo.zip
          Expand-Archive -Path repo.zip -DestinationPath .
          Move-Item -Path "duckstation-uwp/*" -Destination "." -Force
          Remove-Item -Recurse -Force "duckstation-uwp"
        shell: pwsh

      - name: Download and Extract Dependencies Pack
        run: |
          wget https://github.com/stenzek/duckstation-ext-qt-minimal/releases/download/latest/deps-x64.7z
          7z x deps-x64.7z -odep/msvc
        shell: pwsh

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2             

      - name: Generate Self-Signed Certificate
        id: generate_cert
        run: |
          $cert = New-SelfSignedCertificate -CertStoreLocation "Cert:\CurrentUser\My" -Subject "CN=MyUWPCert" -KeyAlgorithm RSA -KeyLength 2048 -Provider "Microsoft Enhanced RSA and AES Cryptographic Provider" -KeyExportPolicy Exportable -NotAfter (Get-Date).AddYears(1) -Type CodeSigningCert
          echo "THUMBPRINT=$($cert.Thumbprint)" >> $env:GITHUB_ENV
        shell: pwsh

      - name: Set Package Name
        id: set_package_name
        run: |
          echo "PACKAGE_NAME=${{ github.event.inputs.package_name }}_${{ github.event.inputs.tag_name }}" >> $GITHUB_ENV
      
      - name: App Build
        run: |
          msbuild $env:SolutionPath `
            /p:Platform=$env:Platform `
            /p:Configuration=$env:Configuration `
            /p:PlatformToolset=v143 `
            /p:UapAppxPackageBuildMode=$env:BuildMode `
            /p:AppxBundle=$env:AppxBundle `
            /p:PackageCertificateThumbprint="${{ env.THUMBPRINT }}" `
            /p:AppxPackageTestDir="${{ env.PackageOutputRootDir }}\${{ env.PACKAGE_NAME }}" `
            /p:SDL2_INCLUDE_DIR="${{ env.SDL2_INCLUDE_DIR }}" `
            /p:SDL2_LIB_DIR="${{ env.SDL2_LIB_DIR }}"
        shell: pwsh

      - name: Check Build Errors
        if: failure()
        run: |
          echo "Build failed. Please check the build log for details."
          type D:\a\duckstation-uwp\duckstation-uwp\src\duckstation-qt\audiosettingswidget.cpp
          type D:\a\duckstation-uwp\duckstation-uwp\dep\vixl\src\code-buffer-vixl.cc
          type D:\a\duckstation-uwp\duckstation-uwp\src\duckstation-regtest\regtest_host.cpp
        shell: pwsh
