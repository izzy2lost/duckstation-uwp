name: Build All DLLs

on:
  push:
    branches:
      - uwp
  pull_request:

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up MSYS2
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          base-devel
          mingw-w64-x86_64-toolchain
          git
          cmake
        msystem: MINGW64

    - name: Create artifacts directory
      run: mkdir artifacts

    # Build zlib (Ensuring shared library)
    - name: Build zlib
      run: |
        git clone https://github.com/madler/zlib.git
        cd zlib
        mkdir build
        cd build
        cmake -G"MinGW Makefiles" -DBUILD_SHARED_LIBS=ON -DZLIB_BUILD_SHARED=ON ..
        mingw32-make
        cp *.dll ../../artifacts/

    # Build libpng
    - name: Build libpng
      run: |
        pacman -S --noconfirm mingw-w64-x86_64-zlib
        git clone https://github.com/glennrp/libpng.git
        cd libpng
        mkdir build
        cd build
        cmake -G"MinGW Makefiles" -DBUILD_SHARED_LIBS=ON ..
        mingw32-make
        cp *.dll ../../artifacts/

    # Build freetype
    - name: Build freetype
      run: |
        git clone https://git.savannah.gnu.org/git/freetype/freetype2.git
        cd freetype2
        mkdir build
        cd build
        cmake -G"MinGW Makefiles" -DBUILD_SHARED_LIBS=ON ..
        mingw32-make
        cp *.dll ../../artifacts/

    # Build harfbuzz
    - name: Build harfbuzz
      run: |
        git clone https://github.com/harfbuzz/harfbuzz.git
        cd harfbuzz
        mkdir build
        cd build
        cmake -G"MinGW Makefiles" -DBUILD_SHARED_LIBS=ON ..
        mingw32-make
        cp *.dll ../../artifacts/

    # Build libjpeg
    - name: Build libjpeg
      run: |
        git clone https://github.com/libjpeg-turbo/libjpeg-turbo.git
        cd libjpeg-turbo
        mkdir build
        cd build
        cmake -G"MinGW Makefiles" -DBUILD_SHARED_LIBS=ON ..
        mingw32-make
        cp *.dll ../../artifacts/

    # Build libsharpyuv
    - name: Build libsharpyuv
      run: |
        git clone https://chromium.googlesource.com/libyuv/libyuv.git
        cd libyuv
        mkdir build
        cd build
        cmake -G"MinGW Makefiles" -DBUILD_SHARED_LIBS=ON ..
        mingw32-make
        cp *.dll ../../artifacts/

    # Build libwebp
    - name: Build libwebp
      run: |
        git clone https://chromium.googlesource.com/webm/libwebp.git
        cd libwebp
        mkdir build
        cd build
        cmake -G"MinGW Makefiles" -DBUILD_SHARED_LIBS=ON ..
        mingw32-make
        cp *.dll ../../artifacts/

    # Build shaderc
    - name: Build shaderc
      run: |
        git clone https://github.com/google/shaderc.git
        cd shaderc
        mkdir build
        cd build
        cmake -G"MinGW Makefiles" -DBUILD_SHARED_LIBS=ON ..
        mingw32-make
        cp *.dll ../../artifacts/

    # Build zstd
    - name: Build zstd
      run: |
        git clone https://github.com/facebook/zstd.git
        cd zstd
        mkdir build
        cd build
        cmake -G"MinGW Makefiles" -DBUILD_SHARED_LIBS=ON ..
        mingw32-make
        cp *.dll ../../artifacts/

    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: mingw64-dlls
        path: artifacts/
