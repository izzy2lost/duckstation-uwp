name: Re-Sign Package

on:
  push:
    branches:
      - uwp

jobs:
  re-sign-package:
    runs-on: windows-latest
    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Download the .appx file from Google Drive
      - name: Download appx file
        run: |
          Invoke-WebRequest -Uri "https://drive.google.com/uc?export=download&id=1zOnmrj2t6FKpia5pCE8M9OktpnrqNjJS" -OutFile app-package.appx

      # Step 3: Download the re-sign application
      - name: Download re-sign application
        run: |
          Invoke-WebRequest -Uri "https://github.com/Empyreal96/Appx_Re-Sign/releases/download/1.1.1.0/PackageRe-Sign.Release.zip" -OutFile re-sign-tool.zip

      # Step 4: Unzip the re-sign application
      - name: Unzip re-sign tool
        run: |
          Expand-Archive -Path re-sign-tool.zip -DestinationPath re-sign-tool

      # Step 5: Run pkgrsn.exe to re-sign the package using Start-Process with timeout
      - name: Re-Sign App Package with Timeout
        run: |
          $toolPath = "${{ github.workspace }}\re-sign-tool\PackageRe-Sign (Release)\pkgrsn.exe"
          $appxPath = "${{ github.workspace }}\app-package.appx"
          $process = Start-Process -FilePath $toolPath -ArgumentList "-a", $appxPath, "--skip" -NoNewWindow -Wait -PassThru -Timeout 120
          if ($process.ExitCode -eq 0) {
              Write-Output "Package re-signed successfully."
          } else {
              Write-Output "Package re-signing failed with exit code: $($process.ExitCode)"
              exit 1
          }
        shell: pwsh

      # Step 6: Wait for 2 minutes before proceeding
      - name: Wait for 2 minutes
        run: |
          Start-Sleep -Seconds 120

      # Step 7: Upload the re-signed .appx as an artifact
      - name: Upload re-signed appx artifact
        uses: actions/upload-artifact@v3
        with:
          name: re-signed-appx
          path: app-package.appx
